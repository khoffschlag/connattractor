# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install texlive-xetex latexmk -y
        python -m pip install --upgrade pip
        npm install -g myst-cli
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build docs with MySt
      run: |
        cd docs 
        myst build -a
        
    - name: Commit files
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -a -m "Add changes"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GIT_TOKEN }}
        branch: ${{ github.ref }}
        
        
    #- name: Commit exported docs to main branch
    #  run: |
    #    git config user.name 'github-actions[bot]' && git config user.email 'github-actions[bot]@users.noreply.github.com'
    #    git add -A docs/exports 
    #    git commit -a -m "autogen"
    #    git diff-index --quiet HEAD || git commit -m "exports" -a
    #    git push origin master  
        
    #- name: GitHub Pages
    #  uses: crazy-max/ghaction-github-pages@v3.1.0
    #  with:
    #    # Build directory to deploy
    #    build_dir: docs/_build
    #    jekyll: false # optional, default is true
    #    # If enabled, nothing will be pushed
    #    dry_run: false # optional, default is false
    #    # Enable verbose output
    #    verbose: true # optional, default is false
    #  env:
    #s      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

